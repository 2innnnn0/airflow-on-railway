# Airflow Core Settings
AIRFLOW__CORE__EXECUTOR=CeleryExecutor
AIRFLOW__CORE__LOAD_EXAMPLES=False
AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True

# Database Connection (Railway Private Networking)
# PostgreSQL 서비스 이름이 'postgres'인 경우
AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:${POSTGRES_PASSWORD}@postgres.railway.internal:5432/railway

# 또는 Railway 변수 참조 사용
# AIRFLOW__CORE__SQL_ALCHEMY_CONN=${{Postgres.DATABASE_URL}}

# Celery Settings (Railway Private Networking)
# Redis 서비스 이름이 'redis'인 경우
AIRFLOW__CELERY__BROKER_URL=redis://redis.railway.internal:6379/0
AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://postgres:${POSTGRES_PASSWORD}@postgres.railway.internal:5432/railway

# 또는 Railway 변수 참조 사용
# AIRFLOW__CELERY__BROKER_URL=${{Redis.REDIS_URL}}
# AIRFLOW__CELERY__RESULT_BACKEND=db+${{Postgres.DATABASE_URL}}

# Fernet Key (비밀키 - 반드시 변경 필요)
# Python으로 생성: from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())
AIRFLOW__CORE__FERNET_KEY=your-generated-fernet-key-here

# Webserver Secret Key (반드시 변경 필요)
AIRFLOW__WEBSERVER__SECRET_KEY=your-secret-key-here

# Admin User Settings (init 서비스용)
AIRFLOW_ADMIN_USERNAME=admin
AIRFLOW_ADMIN_PASSWORD=admin
AIRFLOW_ADMIN_FIRSTNAME=Admin
AIRFLOW_ADMIN_LASTNAME=User
AIRFLOW_ADMIN_EMAIL=datapopcorn@gmail.com

# Optional: Timezone
AIRFLOW__CORE__DEFAULT_TIMEZONE=Asia/Seoul

# Optional: API Settings
AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session

# Optional: Logging
AIRFLOW__LOGGING__LOGGING_LEVEL=INFO

---
AIRFLOW__CORE__EXECUTOR="CeleryExecutor"
AIRFLOW__CORE__LOAD_EXAMPLES="False"
AIRFLOW__CORE__FERNET_KEY="BXW@rwt9dzp@zjc5new"
AIRFLOW__WEBSERVER__SECRET_KEY="BXW@rwt9dzp@zjc5new"
AIRFLOW__CORE__SQL_ALCHEMY_CONN="${{Postgres.DATABASE_URL}}"
AIRFLOW__CELERY__BROKER_URL="${{Redis.REDIS_URL}}"
AIRFLOW__CELERY__RESULT_BACKEND="db+${{Postgres.DATABASE_URL}}"
AIRFLOW__API__AUTH_BACKENDS="airflow.api.auth.backend.basic_auth"